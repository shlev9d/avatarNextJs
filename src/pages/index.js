import Head from 'next/head';
import s from '@/styles/Home.module.css';
import {useState} from 'react';
import User from '@/components/User/User';
import Loader from '@/components/Loader/Loader';
import AddUserBtn from '@/components/AddUserBtn/AddUserBtn';
import RefreshBtn from '@/components/RefreshBtn/RefreshBtn';
import {getAvatars} from '@/common';

export default function Home({avatars}) {
  const [users, setUsers] = useState(avatars);
  const [loading, setLoading] = useState(false);
  const [usersLoading, setUsersLoading] = useState(false);

  const addUser = async () => {
    setLoading(true);
    const user = await getAvatars();
    user && setUsers([...users, ...user]);
    setLoading(false);
  };

  const refreshUsers = async () => {
    setUsersLoading(true);
    const newUsers = await getAvatars(users.length);
    newUsers && setUsers(newUsers);
    setUsersLoading(false);
  };

  const refreshUser = async idx => {
    const user = await getAvatars();
    if (user) {
      const newUsers = [...users];
      newUsers[idx] = user[0];
    }
    setUsers(newUsers);
  };

  return (
    <>
      <Head>
        <title>Avatar NextJs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={s.main}>
        <div className={s.users}>
          {users.map((user, idx) => (
            <User
              key={idx}
              id={idx}
              user={user}
              usersLoading={usersLoading}
              refreshUser={refreshUser}
            />
          ))}
          {loading && (
            <div>
              <Loader />
            </div>
          )}
          <AddUserBtn addUser={addUser} />
        </div>
        <RefreshBtn
          count={users.length}
          refreshUsers={refreshUsers}
          usersLoading={usersLoading}
        />
      </main>
    </>
  );
}

export async function getServerSideProps() {
  const avatars = await getAvatars(5);
  if (avatars) {
    return {props: {avatars}};
  } else{
    return {props: {avatars : []}};
  }
}
